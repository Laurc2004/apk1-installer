name: Build and Release APK

on:
  push:
    tags:
      - 'v*'
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        build-tools: 34.0.0
        cmake: 3.22.1
        ndk: 25.1.8937393
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Download Gradle Wrapper JAR
      run: |
        mkdir -p gradle/wrapper
        curl -L -o gradle/wrapper/gradle-wrapper.jar https://github.com/gradle/gradle/raw/v8.0.0/gradle/wrapper/gradle-wrapper.jar
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1
      
    - name: Build Debug APK
      run: ./gradlew assembleDebug --stacktrace --info
      
    - name: Build Release APK (if Debug succeeds)
      run: ./gradlew assembleRelease --stacktrace --info
      continue-on-error: true
      
    - name: List build outputs
      run: |
        echo "Listing build outputs:"
        find . -name "*.apk" -type f
        
    - name: Upload Debug APK
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/*.apk
        if-no-files-found: warn
        
    - name: Upload Release APK
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: app/build/outputs/apk/release/*.apk
        if-no-files-found: warn
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/') && success()
      uses: softprops/action-gh-release@v2
      with:
        files: |
          app/build/outputs/apk/debug/*.apk
          app/build/outputs/apk/release/*.apk
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}